
---------------------------------------
+ CTTerm runs
(...a taky eta redukce)
-------------------------------------------

prog_ctx  = ctx_yu 

rege = PO_CTTeP_ PO_CTTeP {
  cttep_code        = "ep2"                                     ,
  cttep_info        = "Even-parity problem. With @-Trees." ,
  cttep_data        = jsObj [ ( "im" , imGraphInJSON prog_typ prog_ctx ) ] ,
  cttep_numRuns     =  50  ,
  cttep_numGene     =  50  ,
  cttep_popSize     =  500 ,
  
  cttep_typ         = prog_typ                                     ,
  cttep_ctx         = prog_ctx                                     ,
  
  cttep_gOpt        = CTTermG_Geom     prog_typ prog_ctx 0.75 , 

  cttep_ff          = FF6 prog_type ff "Problems.EvenParity.Funs", 
  
  cttep_saveBest    = True
}

34/50

Total time: 3843.6948468s

Zajímavost : všech prvních 8 běhu dalo vítěze

Global.performanceCurves
[2, 3, 4, 5, 8, 9, 11, 12, 12, 12, 14, 17, 17, 18, 18, 20, 21, 22, 22, 24, 24, 24, 25, 25, 25, 27, 27, 27, 28, 28, 28, 29, 29, 29, 29, 29, 29, 31, 31, 31, 32, 32, 33, 33, 34, 34, 34, 34, 34, 34, 34]

JSON.stringify(graf2)
"[["0",56500],["1",412500],["2",588000],["3",682000],["4",553500],["5",612000],["6",579500],["7",603500],["8",688500],["9",773500],["10",757500],["11",666000],["12",726000],["13",720500],["14",775500],["15",755000],["16",724500],["17",684000],["18",724000],["19",764000],["20",804000],["21",844000],["22",773500],["23",808500],["24",843500],["25",753000],["26",783000],["27",813000],["28",843000],["29",873000],["30",903000],["31",933000],["32",963000],["33",993000],["34",1023000],["35",1053000],["36",1083000],["37",927500],["38",952500],["39",977500],["40",1002500],["41",1027500],["42",1052500],["43",1077500],["44",1102500],["45",1127500],["46",1152500],["47",1177500],["48",1202500],["49",1227500],["50",1252500]]"

(\ x0 -> ( ( ( foldr ( k i)) ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( ( s ( k s))
 ( ( s ( k k)) ( ( s ( k foldr)) ( ( s ( k ( s ( k ( ( s ( ( s ( k s)) ( ( s ( (
 s ( k s)) ( ( s ( k ( s ( k foldr)))) ( ( s ( k ( s ( k ( s ( k (&&))))))) ( (
s ( k ( s ( k k)))) ( ( s ( k ( s ( ( s ( k (||))) i)))) ( ( s ( k k)) i)))))))
( ( s ( k ( ( s ( k nand)) i))) ( ( s ( ( s ( k k)) i)) i))))) ( k ( k ( tail_ x
0)))))))) ( ( s ( k ( s ( ( s ( k k)) i)))) ( ( s ( k ( s ( ( s ( k nand)) ( (&&
) ( head_ x0)))))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (&&))))) ( ( s ( k (&&)
)) i)))) ( k i))))))))) ( ( s ( k ( s ( ( s ( k ( s ( ( s ( k k)) ( nor ( ( ( fo
ldr ( ( s ( ( s ( k s)) ( k (&&)))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nor)))
) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nand))
)) ( ( s ( k nand)) ( ( s ( ( s ( ( s ( k k)) (&&))) i)) i))))) ( ( s ( ( s ( k
s)) ( ( s ( k k)) ( ( s ( k (&&))) i)))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (
&&))))) ( ( s ( k nor)) i)))) ( ( s ( ( s ( k s)) ( ( s ( ( s ( k s)) ( ( s ( k
( s ( k foldr)))) ( ( s ( k ( s ( k k)))) ( ( s ( k ( s ( k k)))) ( ( s ( k k))
i)))))) ( ( s ( k (&&))) i)))) ( k ( k x0))))))))) (&&))))) ( ( s ( ( s ( k s))
( ( s ( k ( s ( k (&&))))) ( ( s ( k k)) ( ( s ( ( s ( k nand)) i)) ( ( s ( ( s
( k (||))) i)) i)))))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k k)))) ( ( s ( k nan
d)) ( ( s ( ( s ( k nand)) i)) i))))) ( ( s ( k ( s ( ( s ( k nor)) i)))) ( ( s
( k nor)) i))))))) ( head_ x0)) ( tail_ x0))))))) ( ( s ( ( s ( k ( s ( k ( ( s
( k ( s ( ( s ( k (||))) i)))) ( ( s ( k nand)) i)))))) k)) i))))) ( ( s ( k k))
 i))))) ( k ( k ( tail_ x0))))) ( ( (&&) ( head_ x0)) ( head_ ( tail_ x0)))) x0)
) x0),1.0,Just 40)



(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nor)))) ( ( s ( k ( s
 ( ( s ( k (&&))) i)))) ( ( s ( k k)) i))))) ( ( s ( ( s ( k s)) ( ( s ( k ( s (
 k (||))))) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k nor)) i)))) ( k i))))) (
 ( s ( ( s ( k s)) ( ( s ( k ( s ( k nor)))) ( ( s ( ( s ( k s)) ( ( s ( k k)) (
 ( s ( k (||))) i)))) ( k i))))) ( k i))))) ( ( ( foldr ( ( s ( ( s ( k s)) ( (
s ( k k)) ( ( s ( k (||))) i)))) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k (||
))) ( ( s ( ( s ( k nor)) i)) i))))) ( k i)))) ( head_ ( tail_ x0))) x0)) x0),1.
0,Just 0)


(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nor)))) ( ( s ( ( s (
 k s)) ( ( s ( k ( s ( k (&&))))) ( ( s ( k ( s ( k ( nor ( head_ ( tail_ x0))))
))) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( k i)))) ( k i)))))) ( ( s ( k (&&))) i))
))) ( k i))) ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nand)))) (||))))
nand)) ( head_ x0)) ( tail_ x0))) x0),1.0,Just 25)


(\ x0 -> ( ( nand ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nor)))) ( (
s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k (&&))) i)))) ( k ( ( s ( ( s ( k ( foldr
 ( k i)))) i)) ( k x0))))))) ( ( s ( k nor)) i))) ( head_ x0)) ( tail_ x0))) ( (
 ( foldr ( ( s ( k (||))) i)) ( head_ x0)) x0)),1.0,Just 37)


(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (||))))) ( ( s ( ( s
( k s)) ( ( s ( k ( s ( k nor)))) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k (&
&))) i)))) ( k i))))) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k nor)) i)))) (
k i)))))) ( ( s ( k ( s ( ( s ( k (&&))) ( ( s ( ( s ( k nor)) i)) i))))) ( ( s
( k ( s ( ( s ( k (||))) i)))) ( ( s ( k k)) i))))) ( ( nand ( head_ x0)) ( head
_ x0))) ( tail_ x0)),1.0,Just 3)


(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nor)))) ( ( s ( k ( s
 ( ( s ( k nor)) i)))) ( ( s ( k k)) i))))) ( ( s ( k (&&))) i))) ( ( ( ( s ( k
( s ( ( s ( k ( s ( ( s ( k ( s ( k i)))) ( ( s ( k ( s ( ( s ( k ( s ( ( s ( k
k)) i)))) ( ( s ( k ( s ( ( s ( k nor)) i)))) ( ( s ( k k)) i)))))) ( ( s ( k k)
) i)))))) ( ( s ( k k)) i))))) ( ( s ( k nor)) ( k ( head_ x0)))) ( head_ ( tail
_ x0))) ( ( k ( head_ x0)) ( head_ ( tail_ ( tail_ ( tail_ x0))))))) ( tail_ x0)
),1.0,Just 17)


(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (&&))))) ( ( s ( k na
nd)) i)))) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k (||))) ( ( s ( ( s ( k (&
&))) i)) i))))) ( k ( ( s ( ( s ( k (||))) i)) ( ( s ( ( s ( k nor)) ( ( s ( ( s
 ( k nand)) i)) ( k ( head_ x0))))) i)))))) ( ( ( foldr ( ( s ( ( s ( k s)) ( (
s ( k ( s ( k nand)))) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k nand)) i))))
( k i))))) ( ( s ( ( s ( k s)) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k foldr)))) (
 ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k s)) ( ( s ( k ( s ( k s)))) ( ( s ( k
 ( s ( k ( s ( k (&&))))))) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k s)) ( (
s ( k k)) ( k i)))))) ( k ( k i))))))))) ( k ( ( s ( k ( s ( k nor)))) ( ( s ( k
 k)) i))))))) k))) ( k ( k x0))))) ( head_ x0)) ( tail_ x0))) x0),1.0,Just 11)


(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nor)))) ( ( s ( ( s (
 k s)) ( ( s ( k k)) ( ( s ( k (&&))) i)))) ( k ( ( s ( ( s ( k (&&))) i)) i))))
)) ( ( s ( k nor)) i))) ( ( nor ( head_ x0)) ( head_ x0))) ( tail_ x0)),1.0,Just
 7)


-----


(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nor)))) ( ( s ( ( s (
 k s)) ( ( s ( k ( s ( k (&&))))) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k (&
&))) i)))) ( k i))))) ( k i))))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nor)))) (
 k ( ( s ( ( s ( k (||))) i)) i))))) ( ( s ( k k)) ( ( s ( ( s ( k (&&))) i)) i)
)))) ( ( (||) ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k ( foldr ( k i)))
))) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k nand)) i)))) ( k i))))) ( k ( k
( tail_ x0))))) ( head_ x0)) x0)) ( ( ( foldr ( ( s ( k k)) i)) ( head_ x0)) x0)
)) x0),1.0,Just 10)



(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (&&))))) ( ( s ( ( s
( k s)) ( ( s ( k k)) ( ( s ( k nand)) i)))) ( k i))))) ( ( s ( k (||))) i))) (
( ( s ( ( s ( k (||))) i)) ( nand ( ( ( foldr ( ( s ( k k)) ( ( s ( ( s ( k nor)
) i)) i))) ( head_ x0)) x0))) ( head_ ( tail_ x0)))) x0),1.0,Just 5)




(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (&&))))) ( ( s ( ( s
( k s)) ( ( s ( k k)) ( ( s ( k (||))) ( ( s ( ( s ( k (&&))) ( ( s ( ( s ( k (&
&))) ( (||) ( head_ ( tail_ x0))))) ( ( s ( ( s ( k nand)) ( ( s ( ( s ( k nand)
) i)) i))) i)))) i))))) ( ( s ( k (&&))) ( ( s ( ( s ( k nor)) i)) ( ( s ( ( s (
 ( s ( k foldr)) ( ( s ( k k)) ( ( s ( k k)) i)))) i)) ( k x0)))))))) ( ( s ( (
s ( k s)) ( ( s ( k ( s ( k (||))))) ( ( s ( k nand)) i)))) ( ( s ( ( s ( k s))
( ( s ( k ( s ( k k)))) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k nand)) i))))
 ( k i))))) ( k ( k ( head_ ( tail_ x0)))))))) ( ( nor ( ( ( foldr ( ( s ( k k))
 i)) ( ( (&&) ( head_ x0)) ( head_ x0))) x0)) ( head_ x0))) ( tail_ x0)),1.0,Jus
t 6)

(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nand)))) ( ( s ( ( s
( k s)) ( ( s ( k ( s ( k (||))))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (||))))
) ( ( s ( ( s ( k s)) ( k ( ( s ( k nor)) i)))) ( k i))))) ( ( s ( k k)) i)))))
( ( s ( k nor)) ( (&&) ( head_ x0))))))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (
||))))) ( ( s ( k ( s ( ( s ( k (&&))) i)))) ( ( s ( k k)) i))))) ( ( s ( k ( (
s ( k k)) ( ( s ( ( s ( k nor)) i)) ( ( s ( ( s ( k ( foldr ( k i)))) ( ( s (&&)
) i))) ( k x0)))))) i)))) ( ( nand ( head_ x0)) ( head_ x0))) ( tail_ x0)),1.0,J
ust 15)

(\ x0 -> ( ( nand ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nor)))) ( (
s ( k ( s ( ( s ( k (&&))) i)))) ( ( s ( k k)) i))))) nor)) ( head_ x0)) ( tail_
 x0))) ( ( nand ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nor)))) ( ( s
( k ( s (||)))) ( ( s ( k k)) i))))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( ( s ( k
 foldr)) ( ( s ( k k)) ( ( s ( k (&&))) i)))))) ( ( s ( ( s ( k s)) ( ( s ( k (
s ( k (&&))))) ( ( s ( k ( s ( ( s ( k nor)) ( ( s ( ( s ( ( s ( k foldr)) ( ( s
 ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k s)) ( ( s ( k ( s ( k nand)))) ( ( s ( (
s ( k s)) ( ( s ( k ( s ( k (||))))) ( ( s ( ( s ( k s)) ( k ( ( s ( k ( s ( ( s
 ( k (||))) i)))) ( k i))))) ( ( s ( k nor)) i))))) (||))))))) ( k ( ( s ( k k))
 i))))) ( ( s ( ( s ( k ( foldr ( ( s ( k nor)) i)))) i)) ( k x0)))) ( k x0)))))
) ( ( s ( k k)) i))))) ( ( s ( k ( ( s ( k (||))) i))) i))))) ( k ( k x0))))) (
head_ x0)) x0)) ( head_ x0))),1.0,Just 28)

(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k (||))) ( ( s (
( s ( k nor)) i)) ( ( s ( ( s ( k nand)) ( ( s ( ( s ( k nor)) i)) i))) i))))))
( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nand)))) ( ( s ( ( s ( k s)) ( k ( ( s ( (
 s ( k s)) ( ( s ( k k)) ( ( s ( k nand)) i)))) ( k i))))) ( ( s ( k k)) ( ( s (
 ( s ( k nor)) i)) ( ( s ( ( s ( k (&&))) i)) ( k ( head_ x0))))))))) ( ( s ( (
s ( k s)) ( ( s ( k ( s ( k nand)))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (&&))
))) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k nand)) i)))) ( k i))))) ( ( s (
k k)) i))))) ( k ( ( s ( ( s ( k nand)) i)) ( k ( head_ x0)))))))) ( ( ( s ( ( s
 ( k nand)) i)) i) ( head_ x0))) ( tail_ x0)),1.0,Just 19)

(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (||))))) ( ( s ( ( s
( k s)) ( ( s ( k ( s ( k nor)))) ( ( s ( k ( s ( ( s ( k nor)) i)))) ( ( s ( k
(||))) i))))) ( ( s ( k (&&))) i))))) ( ( s ( k (&&))) ( ( s ( ( s ( k nor)) i))
 i)))) ( ( ( foldr ( k ( ( s ( ( s ( k nand)) i)) ( nor ( ( (||) ( head_ ( tail_
 x0))) ( ( ( foldr ( k ( ( s (||)) i))) ( head_ ( tail_ x0))) x0)))))) ( head_ (
 tail_ x0))) x0)) x0),1.0,Just 44)


(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (&&))))) ( ( s ( k (|
|))) i)))) ( ( s ( k nand)) ( ( s ( k i)) i)))) ( ( ( foldr ( k ( ( s ( ( s ( k
nand)) i)) ( ( s ( ( s ( k k)) ( ( s ( ( s ( k nor)) i)) ( k ( head_ x0))))) i))
)) ( ( ( foldr ( k i)) ( head_ x0)) x0)) ( tail_ x0))) x0),1.0,Just 19)


(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nand)))) ( ( s ( ( s
( k s)) ( ( s ( k ( s ( k (||))))) ( ( s ( k ( s ( ( s ( k (&&))) i)))) ( ( s (
k k)) i))))) ( ( s ( ( s ( k ( s ( k nor)))) (||))) i))))) ( ( s ( k nand)) ( (
s ( ( s ( k nor)) i)) i)))) ( ( ( s ( ( s ( k nand)) i)) i) ( head_ x0))) ( tail
_ x0)),1.0,Just 25)



(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nand)))) ( ( s ( ( s
( k s)) ( ( s ( k k)) ( ( s ( k (||))) i)))) ( ( s ( ( s ( k s)) ( ( s ( k k)) (
 ( s ( k (||))) i)))) ( k i)))))) ( ( s ( k ( s ( ( s ( k nand)) i)))) ( ( s ( k
 k)) i)))) ( ( ( foldr ( k ( ( s ( ( s ( k nand)) i)) i))) ( head_ x0)) ( tail_
( tail_ x0)))) ( tail_ x0)),1.0,Just 1)


(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nor)))) ( ( s ( k ( s
 ( ( s ( k (&&))) i)))) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k nand)) i))))
 ( k i)))))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (&&))))) ( ( s ( ( s ( k s))
( ( s ( k ( s ( k (||))))) ( ( s ( k ( s ( ( s ( k (&&))) i)))) ( ( s ( k k)) i)
)))) ( ( s ( k k)) i))))) ( k ( ( s ( ( s ( k ( ( s ( k ( s ( ( s ( k nand)) i))
)) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( ( s ( k foldr)) ( ( s ( k k)) ( ( s ( k k
)) i)))))) ( ( s ( k k)) i)))) ( k ( k x0)))))) i)) ( ( s ( ( s ( ( s ( k foldr)
) ( ( s ( k k)) ( ( s ( k k)) i)))) ( ( s ( ( s ( k (||))) i)) i))) ( k x0))))))
) ( ( ( foldr ( k ( ( s ( ( s ( k nand)) i)) i))) ( head_ x0)) x0)) ( tail_ x0))
,1.0,Just 6)



(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (&&))))) ( ( s ( k na
nd)) i)))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( ( s ( k foldr)) ( ( s ( k k)) ( (
 s ( k ( s ( ( s ( k (||))) i)))) ( ( s ( k k)) i))))))) ( ( s ( ( s ( k k)) k))
 ( ( s ( ( s ( k k)) i)) ( k ( head_ x0))))))) ( k ( k x0))))) ( ( ( foldr ( ( s
 ( k k)) ( ( s ( ( s ( k nor)) ( ( s ( ( s ( k (||))) i)) ( k ( head_ x0))))) i)
)) ( head_ x0)) x0)) ( tail_ x0)),1.0,Just 16)


(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (&&))))) ( ( s ( ( s
( k s)) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k foldr)))) ( ( s ( k ( s ( k ( s (
k k)))))) ( ( s ( k ( s ( k k)))) ( ( s ( k ( s ( ( s ( k nand)) i)))) ( ( s ( (
 s ( k k)) k)) i))))))) ( ( s ( k ( ( s ( k nand)) i))) i)))) ( k ( k ( tail_ (
tail_ x0)))))))) ( ( s ( k (||))) i))) ( ( ( foldr ( ( s ( ( s ( k s)) ( k ( ( s
 ( k ( s ( ( s ( k nor)) i)))) ( ( s ( k (&&))) ( ( s ( k i)) i)))))) ( ( s ( k
k)) i))) ( head_ ( tail_ x0))) x0)) ( tail_ x0)),1.0,Just 42)


(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (&&))))) ( ( s ( ( s
( k s)) ( ( s ( k ( s ( k (&&))))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k k)))) (
 ( s ( k nand)) i)))) ( k i))))) ( ( s ( k nand)) i))))) ( ( s ( ( s ( k s)) ( (
 s ( k ( s ( k nand)))) ( ( s ( k ( s ( ( s ( k nor)) i)))) ( ( s ( k k)) i)))))
 ( ( s ( k ( s ( ( s ( k nor)) i)))) ( ( s ( k ( s ( ( s ( k (&&))) i)))) ( k i)
))))) ( ( nor ( head_ x0)) ( head_ x0))) ( tail_ x0)),1.0,Just 4)


(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nor)))) ( ( s ( ( s (
 k s)) ( ( s ( k k)) ( ( s ( k (&&))) i)))) ( ( s ( ( s ( k s)) ( ( s ( k ( s (
k nor)))) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k (&&))) i)))) ( ( s ( k ( s
 ( ( s ( k (&&))) ( ( s ( ( s ( k k)) i)) i))))) ( ( s ( k nand)) ( ( s ( ( s (
k (&&))) i)) i))))))) ( k ( ( s ( ( s ( k nor)) i)) i))))))) ( ( s ( k nor)) i))
) ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nand)))) ( ( s ( ( s ( k s))
 ( ( s ( k ( s ( k nand)))) ( ( s ( k nor)) i)))) ( ( s ( k (&&))) i))))) ( k (
k ( head_ x0))))) ( head_ x0)) x0)) ( tail_ x0)),1.0,Just 22)


(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (&&))))) nand))) ( (
s ( ( s ( k s)) ( ( s ( k ( s ( k (||))))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k
 (||))))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k ( ( s ( ( s ( k s)) ( ( s ( k (
s ( k nand)))) nand))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (||))))) ( ( s ( (
s ( k s)) ( ( s ( k ( s ( k (||))))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (||))
))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (||))))) ( ( s ( ( s ( k s)) ( ( s ( k
 k)) ( ( s ( ( s ( k s)) ( k ( ( s ( k k)) i)))) ( k i))))) ( k i))))) ( ( s ( k
 k)) i))))) ( ( s ( k k)) i))))) ( ( s ( k k)) i))))) ( k ( ( s ( ( s ( k ( fold
r ( ( s ( k (||))) i)))) i)) ( k ( tail_ x0)))))))))) ( ( s ( ( s ( k s)) ( ( s
( k ( s ( k (&&))))) ( ( s ( ( s ( k ( s ( k ( ( s ( k (||))) i))))) k)) i)))) (
 k i))))) ( ( s ( k k)) i))))) ( ( s ( k (||))) i))))) ( ( s ( k k)) i)))) ( ( (
 foldr ( ( s ( k (||))) i)) ( head_ x0)) x0)) x0),1.0,Just 31)




(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nor)))) ( ( s ( ( s (
 k s)) ( ( s ( k k)) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k (&&))) i)))) (
k ( ( s ( ( s ( k nor)) i)) i)))))) ( ( s ( k nand)) i))))) ( ( s ( k nor)) ( (
s ( k i)) i)))) ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (||))))) ( ( s
 ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k nand)) ( ( s ( ( s ( k nand)) i)) i)))))
( ( s ( k ( s ( ( s ( k k)) ( ( s ( ( s ( k nand)) i)) i))))) ( ( s ( k ( s ( (
s ( k (&&))) i)))) ( ( s ( k k)) i))))))) ( ( s ( k ( s ( ( s ( k k)) i)))) ( (
s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k nand)) i)))) ( ( s ( ( s ( k s)) ( ( s (
 k k)) ( ( s ( k nand)) i)))) ( k i)))))) ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s
( k ( s ( k (||))))) ( ( s ( k ( s ( ( s ( k nand)) ( (||) ( head_ ( tail_ x0)))
)))) ( ( s ( k k)) i))))) ( ( s ( k k)) i))) ( head_ x0)) ( tail_ x0))) x0)) x0)
,1.0,Just 11)


(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k k)))) ( ( s ( ( s ( k
 s)) ( ( s ( k ( s ( k (||))))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (&&))))) (
 ( s ( k ( s ( ( s ( k k)) i)))) ( ( s ( k k)) i))))) ( ( s ( k k)) ( ( s ( ( s
( k (||))) i)) i)))))) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k nor)) ( ( s (
 ( s ( k (||))) i)) i))))) ( k ( ( s ( ( s ( k (||))) i)) i))))))) ( ( s ( k k))
 ( ( s ( ( s ( k (&&))) ( ( s ( ( s ( k nand)) i)) ( ( s ( ( s ( k nor)) i)) i))
)) i)))) ( ( ( foldr ( ( s ( k ( s ( ( s ( k nand)) i)))) ( ( s ( k (||))) i)))
( head_ x0)) ( tail_ ( tail_ x0)))) ( tail_ x0)),1.0,Just 15)



(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nand)))) ( ( s ( ( s
( k s)) ( ( s ( k ( s ( k nand)))) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k (
||))) i)))) ( k i))))) ( k ( ( s ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k nor
)) i)))) ( k i))) i)))))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nand)))) ( ( s (
 ( s ( k s)) ( ( s ( k k)) ( ( s ( k nand)) i)))) ( k i))))) ( k i)))) ( ( nand
( ( (||) ( head_ x0)) ( ( ( foldr ( k i)) ( head_ x0)) x0))) ( ( ( foldr ( k i))
 ( head_ x0)) x0))) ( tail_ x0)),1.0,Just 4)



(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (&&))))) ( ( s ( ( s
( k s)) ( ( s ( k ( s ( k nor)))) ( ( s ( k ( s ( ( s ( k (&&))) i)))) ( ( s ( k
 k)) i))))) ( ( s ( k ( s ( ( s ( k nor)) i)))) ( ( s ( k k)) i)))))) ( ( s ( (
s ( k s)) ( ( s ( k ( s ( k (||))))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (||))
))) ( ( s ( k ( s ( ( s ( k nor)) i)))) ( ( s ( k k)) i))))) ( k ( ( s ( ( s ( k
 (||))) i)) i)))))) ( ( s ( k k)) i)))) ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s (
k ( s ( k (||))))) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k nor)) i)))) ( ( s
 ( k ( s ( ( s ( k (&&))) i)))) ( ( s ( k k)) i)))))) ( ( s ( ( s ( k s)) ( ( s
( k ( s ( k (||))))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( ( s ( k foldr)) ( ( s (
 k ( s ( k k)))) ( ( s ( k ( s ( ( s ( k (&&))) i)))) ( ( s ( k k)) i))))))) ( (
 s ( k k)) i)))) ( k ( k x0)))))) ( k i)))) ( ( ( foldr ( k i)) ( head_ x0)) ( t
ail_ x0))) x0)) x0),1.0,Just 2)


(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k ( foldr ( k i)))))) (
 ( s ( ( s ( k s)) ( ( s ( k ( s ( k nor)))) ( ( s ( k ( s ( k i)))) ( ( s ( k n
or)) i))))) (&&))))) ( k ( k x0)))) ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k (
s ( k (&&))))) ( ( s ( k nand)) i)))) ( ( s ( k (||))) ( ( s ( ( s ( k nor)) i))
 i)))) ( head_ x0)) x0)) ( tail_ x0)),1.0,Just 37)


(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nor)))) ( ( s ( k ( s
 ( ( s ( k nor)) i)))) ( ( s ( k k)) i))))) ( ( s ( ( s ( k s)) ( ( s ( k k)) (
( s ( k (&&))) i)))) ( k i)))) ( ( ( foldr ( k i)) ( ( ( foldr ( k ( ( s ( ( s (
 k (||))) ( ( s ( ( s ( k nor)) i)) i))) i))) ( head_ x0)) x0)) x0)) x0),1.0,Jus
t 0)


(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (&&))))) ( ( s ( ( s
( k s)) ( ( s ( k ( s ( k (||))))) ( ( s ( ( s ( k s)) ( k ( ( s ( k (&&))) i)))
) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (||))))) ( ( s ( k k)) i)))) ( k ( (||)
( head_ x0)))))))) ( ( s ( k k)) i))))) ( ( s ( k ( ( s ( k nand)) i))) i))) ( (
 ( s ( ( s ( k nand)) i)) i) ( head_ x0))) ( tail_ x0)),1.0,Just 10)


(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nor)))) ( ( s ( k ( s
 ( ( s ( k (&&))) i)))) ( ( s ( k (&&))) i))))) ( ( s ( ( s ( k s)) ( ( s ( k (
s ( k nor)))) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k (||))) i)))) ( k i))))
) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k (&&))))) ( ( s ( ( s ( k s)) ( ( s ( k k
)) ( ( s ( k nor)) i)))) ( k i))))) ( k i))))) ( ( ( foldr ( k ( ( s ( ( s ( ( s
 ( k foldr)) ( ( s ( k k)) ( ( s ( k ( s ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s
 ( k nand)) i)))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nor)))) ( ( s ( ( s ( k
s)) ( ( s ( k k)) ( ( s ( k (||))) i)))) ( k i))))) ( ( s ( ( s ( k s)) ( ( s (
k ( s ( k (||))))) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k (&&))) i)))) ( k
i))))) ( k i))))))) ( ( s ( k k)) i))))) i)) ( k x0)))) ( head_ x0)) x0)) x0),1.
0,Just 4)


(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nor)))) ( ( s ( ( s (
 k s)) ( ( s ( k ( s ( ( s ( k foldr)) ( ( s ( k k)) ( ( s ( k (&&))) i)))))) (
( s ( k k)) i)))) ( k ( k x0)))))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nor))))
 ( ( s ( k ( s ( ( s ( k (||))) i)))) ( ( s ( k k)) i))))) ( ( s ( ( s ( k s)) (
 ( s ( k ( s ( k nor)))) ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k nand)))) ( ( s (
k ( s ( ( s ( k (&&))) i)))) ( ( s ( k k)) ( ( s ( ( s ( k (&&))) i)) i)))))) (
( s ( k ( s ( ( s ( k k)) ( ( s ( ( s ( k ( foldr ( ( s ( k k)) i)))) i)) ( k x0
)))))) ( ( s ( k k)) i)))))) ( ( s ( ( s ( k ( s ( k nand)))) k)) ( (||) ( head_
 x0))))))) ( ( nand ( head_ x0)) ( head_ x0))) ( tail_ x0)),1.0,Just 13)





(\ x0 -> ( ( ( foldr ( ( s ( ( s ( k s)) ( ( s ( k ( s ( k k)))) ( ( s ( ( s ( k
 s)) ( ( s ( k ( s ( k (&&))))) ( ( s ( k ( s ( ( s ( k (||))) i)))) ( ( s ( k k
)) i))))) ( ( s ( k nand)) i))))) ( ( s ( ( s ( k s)) ( ( s ( ( s ( k s)) ( ( s
( k k)) ( ( s ( k foldr)) ( ( s ( k k)) nand))))) ( ( s ( k ( s ( k ( nor ( head
_ x0)))))) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k (&&))) i)))) ( k i))))))
( k ( k ( tail_ x0)))))) ( ( ( foldr ( k ( ( s ( ( s ( k ( foldr ( ( s ( ( s ( k
 s)) ( ( s ( k ( s ( k nand)))) ( ( s ( ( s ( k s)) ( ( s ( k k)) ( ( s ( k nor)
) i)))) ( k i))))) ( k i))))) ( ( s ( ( s ( k nand)) i)) i))) ( k ( tail_ x0))))
) ( head_ x0)) x0)) x0),1.0,Just 11)
